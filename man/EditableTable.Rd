% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R
\name{EditableTable}
\alias{EditableTable}
\title{EditableTable component}
\usage{
EditableTable(id = NULL, changed_data = list(), dataframe = NULL,
  column_order = NULL, index_name = "", editable = FALSE,
  base_styles = list(numeric = list(`text-align` = "right", `font-family` =
  "'Droid Sans Mono', Courier, monospace"), string = list(`text-align` =
  "left"), input = list(padding = 0, margin = 0, width = "80px", border =
  "none", `font-size` = "1rem"), `input-active` = list(outline =
  "#7FDBFF auto 3px"), table = list(`border-collapse` = "collapse", `box-sizing`
  = "border-box", `font-size` = "1rem"), thead = list(display =
  "table-row-group"), th = list(`text-align` = "left", `font-weight` = "normal",
  border = "thin lightgrey solid",      width = "80px"), td = list(`white-space`
  = "nowrap", border = "thin lightgrey solid", width = "80px", `max-width` =
  "80px", `text-overflow` = "ellipsis", `overflow-x` = "hidden")),
  merged_styles = list(), types = list(), setProps = NULL)
}
\arguments{
\item{id}{The ID of the component, used to identify the component in Dash callbacks}

\item{changed_data}{}

\item{dataframe}{The data of this table, in the form of a Pandas DataFrame.to_dict() The keys of the dict are the column names and the values are a dict that represents the column where the keys of the column are the values of the index and the values are the rows. For example, {    "Column 1": {"0": "Value A", "1": "Value B"},    "Column 2": {"0": 3129, "1": 4931}, }  If `editable=True`, then this `dataframe` will be updated when the user changes values}

\item{column_order}{Order of the columns}

\item{index_name}{The name of the index column. This name is not included in the `dataframe` object}

\item{editable}{Whether or not this table is editable}

\item{base_styles}{CSS styles for all of the different elements in this table. The `base_styles` have a default value. If you want to remove all default styles, set `base_styles` to `{}`.}

\item{merged_styles}{`merged_styles` is recursively merged into `base_styles`. Use `merged_styles` if you want to update or overwrite a small set of the base styles.}

\item{types}{}

\item{setProps}{Dash supplied function}
}
